TODO




== 107 ==

[x] handle shortening sequence while running w/o perplexing
	- has something to do with setting the counts correctly

[x] Ignore MIDI in if not sync MIDI
[x] After MIDI stop continue if changing sync to non-MIDI

[x] BPM display when stop / pause

[x] is default for MIDI stopped or paused?
	- paused!

[] replugging USB should reset MIDI
	- in particular revert to paused, not stopped

[] UI for start / continue / stop ?

[] bug with saving state to flash when user changes just sync mode

[] MIDI clock out
	[] send clock messages
	[] start? stop? spp? continue?

[] remove extended BPM option

----

[] Revamp clock and position and perplex
	[] perplex if off for over a beat?
		[] reset position after perplex?

	[] tune phase correction - perhaps a bit slower?
		- shouldn't be faster than the averaging, should it?


[] let M be one of { M, 1/4, 1/8, 1/16, 1/32 }
	[] settings member
	[] ui field
	[] icons

[] let B be one of { B, 1/4, 1/8, 1/16, 1/32 }




--------------

[] support MIDI sync w/o transport
	- essentially means ignore transport
	- and setSync needs to setState(clockPaused) not clockStopped

[] support DIN24 and DIN48 sync outputs
	[] force 50% duty cycle
	[] icons

[] support 2nd tuplet option for B
	[] icon
	[] UI for setting second Tuplet






--- Later

[] probably should persist state only if it is stable

[] ? ZeroRegs: compile in for production? or keep out?

[] how to stay sync'd to the one?
	- one tap tempo input could reset to the 1!

[] check that various timer periods are in range
	- and use critical.print() if not

[] need a UI for "apply right now!"
[] need a UI for "really, reset the whole dang thing!"

[] speed up centerNumber by using the fixed size of digits in the font

[] make enums be uint8_t based
	- probably not really worth it




QUESTIONS
---------

[] if total reset length is kept under 4 x 4/4 (or even 8 x 8/1!)
	then all cycle counts in q fit in 16 bits

[] should tuplet load be sync'd to measure or full sequence?
[] should sequence length, when reloaded, be reset to first measure?
[] if only a tuplet change, then if sync'd on measure, should sequence restart or no?


NOTES
-----
- can set flags in platform.local.txt, like so:
	compiler.c.extra_flags="-DEK_BUILD"
	compiler.cpp.extra_flags="-DEK_BUILD"

- to build release UF2 file:
	- build in Arduino
	- note directory of output items in verbose output
	- cd there
	- run
		python ~/bin/uf2conv.py pb.ino.bin -c -o pulsar-buddy-v1xx.uf2
	- uf2conf.py script comes from:
		https://github.com/microsoft/uf2/blob/master/utils/uf2conv.py


SYNC
----

if computed rate is outside of BPM (divisor) range
	- then BAD_SYNC condition
	- show some form of broken / question icon
	- ? show previous BPM?
		- target is likely to have slewed up?

if missed N (2?) clocks,
	- then PAUSED_SYNC condition
	- show previous BPM, but with a paused icon on top
	- on next clock...
		- restart capture (resetcapture() won't work because same sync rate)
		- ? reset counters to start of sequence?
